/**
 * A proxy handler for exposing array-valued hashes
 * as hashes with singular values.
 * This proxy will always take the first element of array values.
 */
export declare class SingularPropertyHandler<T> implements ProxyHandler<{
    [predicate: string]: T[];
}> {
    has(target: {
        [predicate: string]: T[];
    }, p: PropertyKey): boolean;
    get(target: {
        [predicate: string]: T[];
    }, p: PropertyKey): T;
    set(target: {
        [predicate: string]: T[];
    }, p: PropertyKey, value: any): boolean;
    ownKeys(target: {
        [predicate: string]: T[];
    }): PropertyKey[];
}
