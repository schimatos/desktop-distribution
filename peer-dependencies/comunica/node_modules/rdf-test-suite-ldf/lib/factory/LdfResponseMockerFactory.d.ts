import { IFetchOptions } from "rdf-test-suite/lib/Util";
import { LdfResponseMocker } from "../testcase/ldf/mock/LdfResponseMocker";
import { ILdfTestSuiteConfig } from '../LdfTestSuiteRunner';
export declare class LdfResponseMockerFactory {
    readonly options: IFetchOptions & ILdfTestSuiteConfig;
    private currentPort;
    constructor(options: IFetchOptions & ILdfTestSuiteConfig);
    /**
     * Return a LdfResponseMocker with the next open port
     */
    getNewLdfResponseMocker(): Promise<LdfResponseMocker>;
    /**
     * Check if the port number is currently unused, this is important to avoid unnecessary failing of tests
     * @param port The port which will be checked
     */
    private isPortAvailable;
    /**
     * Check if the port is a valid port number
     * @param port The port-number that should be tested
     */
    private isPort;
}
