import { IFetchOptions } from "rdf-test-suite";
import { LdfTestCaseEvaluation } from "../LdfTestCaseEvaluationHandler";
/**
 * Class that fetches the mocked testfiles.
 */
export declare class LdfMockFetcher {
    private test;
    constructor(test: LdfTestCaseEvaluation);
    /**
     * Parse the mocked testfiles.
     * @param requestedURI The URI of the request the engine requests
     * @param object The LdfTestCaseEvaluation we're testing
     * @param {IFetchOptions} options Options for fetching.
     * @returns IMockedResponse representing the mocked testfiles
     */
    parseMockedResponse(requestedURI: string, options?: IFetchOptions): Promise<IMockedResponse>;
    /**
     * Get the URI of the mocked testfile, by hashing the requestedURI and using the
     * URI of the folder containing the testfiles.
     * @param mockFolderURI The URI of the folder containing the mocked testfiles
     * @param requestedURI The URI of the request the engine requests
     */
    private getMockedFileURI;
    /**
     * Parse the headers of a mocked testfile (cfr. https://github.com/comunica/ontology-query-testing#README).
     * @param headers The header lines of the mocked testfile.
     * @returns a map with the header values.
     */
    private parseMockedFileHeaders;
    private pickHeaderLines;
}
/**
 * Interface representing a mocked testfile.
 */
export interface IMockedResponse {
    query: string;
    iri: string;
    contentType: string;
    body: string;
}
/**
 * Interface representing the header and the body of a mocked testfile;
 */
export interface IHeaderResponse {
    header: string;
    body: string;
}
