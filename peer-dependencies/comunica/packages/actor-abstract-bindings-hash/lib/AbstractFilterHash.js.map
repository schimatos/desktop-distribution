{"version":3,"file":"AbstractFilterHash.js","sourceRoot":"","sources":["AbstractFilterHash.ts"],"names":[],"mappings":";;;AAEA,uEAEuC;AAEvC,qCAA+B;AAC/B,2CAA0C;AAG1C;;GAEG;AACH,MAAsB,kBAAgD,SAAQ,sDAAmC;IAE/G,YAAmB,IAAuC,EAAE,QAAgB;QAC1E,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACxB,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,IAAI,CAAC,QAAkB;QACnC,OAAO,cAAI,EAAE;aACV,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,yBAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACnE,MAAM,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC;CAGF;AAlBD,gDAkBC","sourcesContent":["import type { Bindings, IActorQueryOperationOutputBindings,\n  IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperationTypedMediated,\n} from '@comunica/bus-query-operation';\nimport type { ActionContext } from '@comunica/core';\nimport { sha1 } from 'hash.js';\nimport { termToString } from 'rdf-string';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Hash Query Operation Actor.\n */\nexport abstract class AbstractFilterHash<T extends Algebra.Operation> extends ActorQueryOperationTypedMediated<T>\n  implements IActorInitRdfDereferencePagedArgs {\n  public constructor(args: IActorInitRdfDereferencePagedArgs, operator: string) {\n    super(args, operator);\n  }\n\n  /**\n   * Create a string-based hash of the given object.\n   * @param bindings The bindings to hash.\n   * @return {string} The object's hash.\n   */\n  public static hash(bindings: Bindings): string {\n    return sha1()\n      .update(require('canonicalize')(bindings.map(x => termToString(x))))\n      .digest('hex');\n  }\n\n  public abstract runOperation(pattern: T, context: ActionContext): Promise<IActorQueryOperationOutputBindings>;\n}\n\nexport interface IActorInitRdfDereferencePagedArgs extends IActorQueryOperationTypedMediatedArgs {\n\n}\n"]}