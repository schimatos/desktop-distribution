{"version":3,"file":"ActorHttpNative.js","sourceRoot":"","sources":["ActorHttpNative.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IActionHttp, IActorHttpOutput } from '@comunica/bus-http';\nimport { ActorHttp,\n  KEY_CONTEXT_INCLUDE_CREDENTIALS, KEY_CONTEXT_AUTH } from '@comunica/bus-http';\nimport type { IActorArgs } from '@comunica/core';\nimport type { IMediatorTypeTime } from '@comunica/mediatortype-time';\nimport 'cross-fetch/polyfill';\nimport Requester from './Requester';\n\n/**\n * A comunica Follow Redirects Http Actor.\n */\nexport class ActorHttpNative extends ActorHttp {\n  private readonly userAgent: string;\n\n  private readonly requester: Requester;\n\n  public constructor(args: IActorHttpNativeArgs) {\n    super(args);\n    this.userAgent = ActorHttpNative.createUserAgent();\n    this.requester = new Requester(args.agentOptions ? JSON.parse(args.agentOptions) : undefined);\n  }\n\n  public static createUserAgent(): string {\n    return `Comunica/actor-http-native (${typeof global.navigator === 'undefined' ?\n      `Node.js ${process.version}; ${process.platform}` :\n      `Browser-${global.navigator.userAgent}`})`;\n  }\n\n  public async test(action: IActionHttp): Promise<IMediatorTypeTime> {\n    // TODO: check for unsupported fetch features\n    return { time: Infinity };\n  }\n\n  public async run(action: IActionHttp): Promise<IActorHttpOutput> {\n    const options: any = {};\n    // Input can be a Request object or a string\n    // if it is a Request object it can contain the same settings as the init object\n    if ((<any>action.input).url) {\n      options.url = (<Request>action.input).url;\n      Object.assign(options, action.input);\n    } else {\n      options.url = action.input;\n    }\n\n    if (action.init) {\n      Object.assign(options, action.init);\n      options.headers = new Headers(action.init.headers);\n    } else {\n      options.headers = (<Request>action.input).headers;\n    }\n\n    if (!options.headers) {\n      options.headers = new Headers();\n    }\n    if (!options.headers.has('user-agent')) {\n      options.headers.append('user-agent', this.userAgent);\n    }\n\n    options.method = options.method || 'GET';\n    if (action.context && action.context.get(KEY_CONTEXT_INCLUDE_CREDENTIALS)) {\n      options.withCredentials = true;\n    }\n\n    if (action.context && action.context.get(KEY_CONTEXT_AUTH)) {\n      options.auth = action.context.get(KEY_CONTEXT_AUTH);\n    }\n\n    this.logInfo(action.context, `Requesting ${options.url}`, () => ({\n      headers: ActorHttp.headersToHash(options.headers),\n    }));\n\n    // Not all options are supported\n\n    return new Promise<IActorHttpOutput>((resolve, reject) => {\n      const req = this.requester.createRequest(options);\n      req.on('error', reject);\n      req.on('response', httpResponse => {\n        httpResponse.on('error', (error: Error) => {\n          httpResponse = null;\n          reject(error);\n        });\n        // Avoid memory leak on HEAD requests\n        if (options.method === 'HEAD') {\n          httpResponse.destroy();\n        }\n        // Using setImmediate so error can be caught should it be thrown\n        setImmediate(() => {\n          if (httpResponse) {\n            // Expose fetch cancel promise\n            httpResponse.cancel = () => {\n              httpResponse.destroy();\n              return Promise.resolve();\n            };\n            // Missing several of the required fetch fields\n            const headers = httpResponse.headers;\n\n            const result = <IActorHttpOutput> {\n              body: httpResponse,\n              headers,\n              ok: httpResponse.statusCode < 300,\n              redirected: options.url !== httpResponse.responseUrl,\n              status: httpResponse.statusCode,\n              // When the content came from another resource because of conneg, let Content-Location deliver the url\n              url: headers.has('content-location') ? headers.get('content-location') : httpResponse.responseUrl,\n            };\n            resolve(result);\n          }\n        });\n      });\n    });\n  }\n}\n\n// Try to keep connections open, and set a maximum number of connections per server\n// AGENT_SETTINGS = {keepAlive: true, maxSockets: 5};\nexport interface IActorHttpNativeArgs extends IActorArgs<IActionHttp, IMediatorTypeTime, IActorHttpOutput> {\n  agentOptions?: string;\n}\n"]}