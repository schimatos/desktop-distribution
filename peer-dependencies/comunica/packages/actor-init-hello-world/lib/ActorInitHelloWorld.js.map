{"version":3,"file":"ActorInitHelloWorld.js","sourceRoot":"","sources":["ActorInitHelloWorld.ts"],"names":[],"mappings":";;;AAAA,mCAAqC;AAErC,iDAA+C;AAE/C,MAAM,cAAc,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAEnD;;;;;;GAMG;AACH,MAAa,mBAAoB,SAAQ,oBAAS;IAGhD,YAAmB,IAA8B;QAC/C,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;SACtB;IACH,CAAC;IAEM,KAAK,CAAC,IAAI,CAAC,MAAmB;QACnC,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,MAAmB;QAClC,OAAO;YACL,MAAM,EAAE,IAAI,oBAAW,EAAE;YACzB,MAAM,EAAE,cAAc,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;SACnE,CAAC;IACJ,CAAC;CACF;AApBD,kDAoBC","sourcesContent":["import { PassThrough } from 'stream';\nimport type { IActionInit, IActorOutputInit } from '@comunica/bus-init';\nimport { ActorInit } from '@comunica/bus-init';\nimport type { IActorArgs, IActorTest } from '@comunica/core';\nconst stringToStream = require('streamify-string');\n\n/**\n * A Hello World actor that listens on the 'init' bus.\n *\n * It takes an optional `hello` parameter, which defaults to 'Hello'.\n * When run, it will print the `hello` parameter to the console,\n * followed by all arguments it received.\n */\nexport class ActorInitHelloWorld extends ActorInit implements IActorInitHelloWorldArgs {\n  public readonly hello: string;\n\n  public constructor(args: IActorInitHelloWorldArgs) {\n    super(args);\n    if (!this.hello) {\n      this.hello = 'Hello';\n    }\n  }\n\n  public async test(action: IActionInit): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionInit): Promise<IActorOutputInit> {\n    return {\n      stderr: new PassThrough(),\n      stdout: stringToStream(`${this.hello} ${action.argv.join(' ')}\\n`),\n    };\n  }\n}\n\nexport interface IActorInitHelloWorldArgs extends IActorArgs<IActionInit, IActorTest, IActorOutputInit> {\n  hello: string;\n}\n"]}