{"version":3,"file":"ActorQueryOperationPathInv.js","sourceRoot":"","sources":["ActorQueryOperationPathInv.ts"],"names":[],"mappings":";;;AAAA,uEAAkE;AAIlE,qDAA0C;AAE1C;;GAEG;AACH,MAAa,0BAA2B,SAAQ,uCAAiB;IAC/D,YAAmB,IAA2C;QAC5D,KAAK,CAAC,IAAI,EAAE,yBAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,IAAkB,EAAE,OAAsB;QAClE,MAAM,SAAS,GAAiB,IAAI,CAAC,SAAS,CAAC;QAC/C,MAAM,OAAO,GAAG,uCAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5G,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC9E,CAAC;CACF;AAVD,gEAUC","sourcesContent":["import { ActorAbstractPath } from '@comunica/actor-abstract-path';\nimport type { IActorQueryOperationOutput,\n  IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport type { ActionContext } from '@comunica/core';\nimport { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Path Inv Query Operation Actor.\n */\nexport class ActorQueryOperationPathInv extends ActorAbstractPath {\n  public constructor(args: IActorQueryOperationTypedMediatedArgs) {\n    super(args, Algebra.types.INV);\n  }\n\n  public async runOperation(path: Algebra.Path, context: ActionContext): Promise<IActorQueryOperationOutput> {\n    const predicate = <Algebra.Inv> path.predicate;\n    const invPath = ActorAbstractPath.FACTORY.createPath(path.object, predicate.path, path.subject, path.graph);\n    return this.mediatorQueryOperation.mediate({ operation: invPath, context });\n  }\n}\n"]}