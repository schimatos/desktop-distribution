{"version":3,"file":"ActorRdfParseN3.js","sourceRoot":"","sources":["ActorRdfParseN3.ts"],"names":[],"mappings":";;;AAEA,2DAAuE;AAEvE,2BAAkC;AAElC;;;;GAIG;AACH,MAAa,eAAgB,SAAQ,4CAA4B;IAC/D,YAAmB,IAAuC;QACxD,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,SAAS,CAAC,MAAuB,EAAE,SAAiB,EAAE,OAAsB;QAEvF,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAA;QAC9B,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,iBAAY,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAC/E,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAA;QAC7B,OAAO;YACL,KAAK;YACL,OAAO,EAAE,SAAS,KAAK,aAAa;gBACpC,SAAS,KAAK,uBAAuB;gBACrC,SAAS,KAAK,SAAS;SACxB,CAAC;IACJ,CAAC;CACF;AAlBD,0CAkBC","sourcesContent":["import type { IActionRdfParse, IActorRdfParseFixedMediaTypesArgs,\n  IActorRdfParseOutput } from '@comunica/bus-rdf-parse';\nimport { ActorRdfParseFixedMediaTypes } from '@comunica/bus-rdf-parse';\nimport type { ActionContext } from '@comunica/core';\nimport { StreamParser } from 'n3';\n\n/**\n * An N3 RDF Parse actor that listens on the 'rdf-parse' bus.\n *\n * It is able to parse N3-based RDF serializations and announce the presence of them by media type.\n */\nexport class ActorRdfParseN3 extends ActorRdfParseFixedMediaTypes {\n  public constructor(args: IActorRdfParseFixedMediaTypesArgs) {\n    super(args);\n  }\n\n  public async runHandle(action: IActionRdfParse, mediaType: string, context: ActionContext):\n  Promise<IActorRdfParseOutput> {\n    action.input.on('error', error => quads.emit('error', error));\n    console.log('before n3 parse')\n    const quads = action.input.pipe(new StreamParser({ baseIRI: action.baseIRI }));\n    console.log('after n3 parse')\n    return {\n      quads,\n      triples: mediaType === 'text/turtle' ||\n      mediaType === 'application/n-triples' ||\n      mediaType === 'text/n3',\n    };\n  }\n}\n"]}