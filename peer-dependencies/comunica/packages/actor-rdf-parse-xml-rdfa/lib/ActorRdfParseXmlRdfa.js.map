{"version":3,"file":"ActorRdfParseXmlRdfa.js","sourceRoot":"","sources":["ActorRdfParseXmlRdfa.ts"],"names":[],"mappings":";;;AAEA,2DAAuE;AAEvE,iEAAmD;AAEnD;;GAEG;AACH,MAAa,oBAAqB,SAAQ,4CAA4B;IACpE,YAAmB,IAAuC;QACxD,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,SAAS,CAAC,MAAuB,EAAE,SAAiB,EAAE,OAAsB;;QAEvF,MAAM,QAAQ,SAAG,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,mCAAI,SAAS,CAAC;QACzF,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;QAC9D,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,kCAAU,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;QACvG,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAClC,CAAC;CACF;AAZD,oDAYC","sourcesContent":["import type { IActionRdfParse, IActorRdfParseFixedMediaTypesArgs,\n  IActorRdfParseOutput } from '@comunica/bus-rdf-parse';\nimport { ActorRdfParseFixedMediaTypes } from '@comunica/bus-rdf-parse';\nimport type { ActionContext } from '@comunica/core';\nimport { RdfaParser } from 'rdfa-streaming-parser';\n\n/**\n * A comunica XML RDFa RDF Parse Actor.\n */\nexport class ActorRdfParseXmlRdfa extends ActorRdfParseFixedMediaTypes {\n  public constructor(args: IActorRdfParseFixedMediaTypesArgs) {\n    super(args);\n  }\n\n  public async runHandle(action: IActionRdfParse, mediaType: string, context: ActionContext):\n  Promise<IActorRdfParseOutput> {\n    const language = (action.headers && action.headers.get('content-language')) ?? undefined;\n    action.input.on('error', error => quads.emit('error', error));\n    const quads = action.input.pipe(new RdfaParser({ baseIRI: action.baseIRI, profile: 'xml', language }));\n    return { quads, triples: true };\n  }\n}\n"]}