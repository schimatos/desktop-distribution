{"version":3,"file":"ActorRdfResolveHypermediaLinksNext.js","sourceRoot":"","sources":["ActorRdfResolveHypermediaLinksNext.ts"],"names":[],"mappings":";;;AAEA,iGAA4F;AAG5F;;GAEG;AACH,MAAa,kCAAmC,SAAQ,iEAA8B;IACpF,YAAmB,IAC+B;QAChD,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,IAAI,CAAC,MAAwC;QACxD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,oCAAoC,CAAC,CAAC;SACzE;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,MAAwC;QACvD,OAAO,EAAE,IAAI,EAAE,CAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAE,EAAC,CAAC;IAC3C,CAAC;CACF;AAhBD,gFAgBC","sourcesContent":["import type { IActionRdfResolveHypermediaLinks,\n  IActorRdfResolveHypermediaLinksOutput } from '@comunica/bus-rdf-resolve-hypermedia-links';\nimport { ActorRdfResolveHypermediaLinks } from '@comunica/bus-rdf-resolve-hypermedia-links';\nimport type { IActorArgs, IActorTest } from '@comunica/core';\n\n/**\n * A comunica Next RDF Resolve Hypermedia Links Actor.\n */\nexport class ActorRdfResolveHypermediaLinksNext extends ActorRdfResolveHypermediaLinks {\n  public constructor(args: IActorArgs<IActionRdfResolveHypermediaLinks,\n  IActorTest, IActorRdfResolveHypermediaLinksOutput>) {\n    super(args);\n  }\n\n  public async test(action: IActionRdfResolveHypermediaLinks): Promise<IActorTest> {\n    if (!action.metadata.next) {\n      throw new Error(`Actor ${this.name} requires a 'next' metadata entry.`);\n    }\n    return true;\n  }\n\n  public async run(action: IActionRdfResolveHypermediaLinks): Promise<IActorRdfResolveHypermediaLinksOutput> {\n    return { urls: [ action.metadata.next ]};\n  }\n}\n"]}