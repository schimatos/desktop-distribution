{"version":3,"file":"ActorRdfSerializeJsonLd.js","sourceRoot":"","sources":["ActorRdfSerializeJsonLd.ts"],"names":[],"mappings":";;;AAGA,mEAEqC;AAErC,6EAA+D;AAE/D;;GAEG;AACH,MAAa,uBAAwB,SAAQ,oDAAgC;IAM3E,YAAmB,IAAkC;QACnD,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,SAAS,CAAC,MAA2B,EAAE,SAAiB,EAAE,OAAsB;QAE3F,MAAM,IAAI,GAAgC,IAAI,8CAAgB,CAC5D,EAAE,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,EAAE,CACtD,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC5B,OAAO,EAAE,IAAI,EAAE,CAAC;IAClB,CAAC;CACF;AAjBD,0DAiBC","sourcesContent":["import type { IActionRdfSerialize,\n  IActorRdfSerializeFixedMediaTypesArgs,\n  IActorRdfSerializeOutput } from '@comunica/bus-rdf-serialize';\nimport {\n  ActorRdfSerializeFixedMediaTypes,\n} from '@comunica/bus-rdf-serialize';\nimport type { ActionContext } from '@comunica/core';\nimport { JsonLdSerializer } from 'jsonld-streaming-serializer';\n\n/**\n * A comunica Jsonld RDF Serialize Actor.\n */\nexport class ActorRdfSerializeJsonLd extends ActorRdfSerializeFixedMediaTypes {\n  /**\n   * The number of spaces that should be used to indent stringified JSON.\n   */\n  public readonly jsonStringifyIndentSpaces: number;\n\n  public constructor(args: IActorRdfSerializeJsonLdArgs) {\n    super(args);\n  }\n\n  public async runHandle(action: IActionRdfSerialize, mediaType: string, context: ActionContext):\n  Promise<IActorRdfSerializeOutput> {\n    const data: NodeJS.ReadableStream = <any> new JsonLdSerializer(\n      { space: ' '.repeat(this.jsonStringifyIndentSpaces) },\n    ).import(action.quadStream);\n    return { data };\n  }\n}\n\nexport interface IActorRdfSerializeJsonLdArgs extends IActorRdfSerializeFixedMediaTypesArgs {\n  jsonStringifyIndentSpaces: number;\n}\n"]}