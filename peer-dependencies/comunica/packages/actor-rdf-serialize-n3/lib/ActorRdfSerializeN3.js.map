{"version":3,"file":"ActorRdfSerializeN3.js","sourceRoot":"","sources":["ActorRdfSerializeN3.ts"],"names":[],"mappings":";;;AAGA,mEAEqC;AAErC,2BAAkC;AAElC;;GAEG;AACH,MAAa,mBAAoB,SAAQ,oDAAgC;IACvE,YAAmB,IAA2C;QAC5D,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,SAAS,CAAC,MAA2B,EAAE,SAAiB,EAAE,OAAsB;QAE3F,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAA;QAClC,MAAM,IAAI,GAAgC,IAAI,iBAAY,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC5G,OAAO,EAAE,IAAI;YACX,OAAO,EAAE,SAAS,KAAK,aAAa;gBACpC,SAAS,KAAK,uBAAuB;gBACrC,SAAS,KAAK,SAAS,EAAE,CAAC;IAC9B,CAAC;CACF;AAdD,kDAcC","sourcesContent":["import type { IActionRdfSerialize,\n  IActorRdfSerializeFixedMediaTypesArgs,\n  IActorRdfSerializeOutput } from '@comunica/bus-rdf-serialize';\nimport {\n  ActorRdfSerializeFixedMediaTypes,\n} from '@comunica/bus-rdf-serialize';\nimport type { ActionContext } from '@comunica/core';\nimport { StreamWriter } from 'n3';\n\n/**\n * A comunica N3 RDF Serialize Actor.\n */\nexport class ActorRdfSerializeN3 extends ActorRdfSerializeFixedMediaTypes {\n  public constructor(args: IActorRdfSerializeFixedMediaTypesArgs) {\n    super(args);\n  }\n\n  public async runHandle(action: IActionRdfSerialize, mediaType: string, context: ActionContext):\n  Promise<IActorRdfSerializeOutput> {\n    console.log(\"inside n3 runhandle\")\n    const data: NodeJS.ReadableStream = <any> new StreamWriter({ format: mediaType }).import(action.quadStream);\n    return { data,\n      triples: mediaType === 'text/turtle' ||\n      mediaType === 'application/n-triples' ||\n      mediaType === 'text/n3' };\n  }\n}\n"]}