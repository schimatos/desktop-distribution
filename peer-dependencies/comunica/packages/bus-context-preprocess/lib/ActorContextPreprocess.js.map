{"version":3,"file":"ActorContextPreprocess.js","sourceRoot":"","sources":["ActorContextPreprocess.ts"],"names":[],"mappings":";;;AACA,yCAAuC;AAEvC;;;;;;;;;;GAUG;AACH,MAAsB,sBACpB,SAAQ,YAAyD;IACjE,YAAmB,IAAoE;QACrF,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;CACF;AALD,wDAKC","sourcesContent":["import type { ActionContext, IAction, IActorArgs, IActorOutput, IActorTest } from '@comunica/core';\nimport { Actor } from '@comunica/core';\n\n/**\n * A comunica actor for context-preprocess events.\n *\n * Actor types:\n * * Input:  IActionContextPreprocess:      A context that will be processed.\n * * Test:   <none>\n * * Output: IActorContextPreprocessOutput: The resulting context.\n *\n * @see IActionContextPreprocess\n * @see IActorContextPreprocessOutput\n */\nexport abstract class ActorContextPreprocess\n  extends Actor<IAction, IActorTest, IActorContextPreprocessOutput> {\n  public constructor(args: IActorArgs<IAction, IActorTest, IActorContextPreprocessOutput>) {\n    super(args);\n  }\n}\n\nexport interface IActorContextPreprocessOutput extends IActorOutput {\n  /**\n   * A context object.\n   * Can be null.\n   */\n  context?: ActionContext;\n}\n"]}