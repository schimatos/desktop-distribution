{"version":3,"file":"ActorHttpInvalidate.js","sourceRoot":"","sources":["ActorHttpInvalidate.ts"],"names":[],"mappings":";;;AACA,yCAAuC;AAEvC;;;;;;;;;;GAUG;AACH,MAAsB,mBAAoB,SAAQ,YAAoE;IACpH,YAAmB,IAA+E;QAChG,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;CACF;AAJD,kDAIC","sourcesContent":["import type { IAction, IActorArgs, IActorOutput, IActorTest } from '@comunica/core';\nimport { Actor } from '@comunica/core';\n\n/**\n * A comunica actor for http-invalidate events.\n *\n * Actor types:\n * * Input:  IActionHttpInvalidate:      An action for invalidating the cached contents of given URL.\n * * Test:   <none>\n * * Output: IActorHttpInvalidateOutput: An empty response.\n *\n * @see IActionHttpInvalidate\n * @see IActorHttpInvalidateOutput\n */\nexport abstract class ActorHttpInvalidate extends Actor<IActionHttpInvalidate, IActorTest, IActorHttpInvalidateOutput> {\n  public constructor(args: IActorArgs<IActionHttpInvalidate, IActorTest, IActorHttpInvalidateOutput>) {\n    super(args);\n  }\n}\n\nexport interface IActionHttpInvalidate extends IAction {\n  /**\n   * The URL that requires invalidation.\n   * If not provided, then _all_ URLs need to be invalidated.\n   */\n  url?: string;\n}\n\nexport interface IActorHttpInvalidateOutput extends IActorOutput {\n\n}\n"]}