{"version":3,"file":"ActorInit.js","sourceRoot":"","sources":["ActorInit.ts"],"names":[],"mappings":";;;AAEA,yCAAuC;AAEvC;;;;;;;;;;;GAWG;AACH,MAAsB,SAAU,SAAQ,YAAgD;IACtF,YAAmB,IAA2D;QAC5E,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;CACF;AAJD,8BAIC","sourcesContent":["import type { Readable } from 'stream';\nimport type { IAction, IActorOutput, IActorTest, IActorArgs } from '@comunica/core';\nimport { Actor } from '@comunica/core';\n\n/**\n * A base actor for listening to init events.\n *\n * Actor types:\n * * Input:  IActionInit:      Contains process information\n *                             such as the list of arguments,\n *                             environment variables and input stream.\n * * Test:   <none>\n * * Output: IActorOutputInit: Contains process output streams.\n *\n * @see IActionInit\n */\nexport abstract class ActorInit extends Actor<IActionInit, IActorTest, IActorOutputInit> {\n  public constructor(args: IActorArgs<IActionInit, IActorTest, IActorOutputInit>) {\n    super(args);\n  }\n}\n\n/**\n * The init input, which contains the program arguments.\n */\nexport interface IActionInit extends IAction {\n  /**\n   * The list of program arguments.\n   */\n  argv: string[];\n  /**\n   * The mapping of environment variables.\n   */\n  env: Record<string, string | undefined>;\n  /**\n   * A standard input stream.\n   */\n  stdin: Readable;\n}\n\nexport interface IActorOutputInit extends IActorOutput {\n  /**\n   * A standard error output stream.\n   */\n  stderr?: Readable;\n  /**\n   * A standard output stream.\n   */\n  stdout?: Readable;\n}\n"]}