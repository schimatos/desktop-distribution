{"version":3,"file":"ActorOptimizeQueryOperation.js","sourceRoot":"","sources":["ActorOptimizeQueryOperation.ts"],"names":[],"mappings":";;;AACA,yCAAuC;AAGvC;;;;;;;;;;GAUG;AACH,MAAsB,2BACpB,SAAQ,YAAoF;IAC5F,YAAmB,IAA+F;QAChH,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;CACF;AALD,kEAKC","sourcesContent":["import type { IAction, IActorArgs, IActorOutput, IActorTest } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica actor for optimize-query-operation events.\n *\n * Actor types:\n * * Input:  IActionOptimizeQueryOperation:      An incoming SPARQL operation.\n * * Test:   <none>\n * * Output: IActorOptimizeQueryOperationOutput: A (possibly optimized) outgoing SPARQL operation.\n *\n * @see IActionOptimizeQueryOperation\n * @see IActorOptimizeQueryOperationOutput\n */\nexport abstract class ActorOptimizeQueryOperation\n  extends Actor<IActionOptimizeQueryOperation, IActorTest, IActorOptimizeQueryOperationOutput> {\n  public constructor(args: IActorArgs<IActionOptimizeQueryOperation, IActorTest, IActorOptimizeQueryOperationOutput>) {\n    super(args);\n  }\n}\n\nexport interface IActionOptimizeQueryOperation extends IAction {\n  operation: Algebra.Operation;\n}\n\nexport interface IActorOptimizeQueryOperationOutput extends IActorOutput {\n  operation: Algebra.Operation;\n}\n"]}