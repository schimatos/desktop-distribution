{"version":3,"file":"ActorRdfJoinQuads.js","sourceRoot":"","sources":["ActorRdfJoinQuads.ts"],"names":[],"mappings":";;;AACA,yCAAsF;AAEtF;;;;;;;;;;GAUG;AACH,MAAsB,iBAAkB,SAAQ,YAAgE;IAC9G,YAAmB,IAA2E;QAC5F,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;CAWF;AAdD,8CAcC","sourcesContent":["import { QuadStream } from '@comunica/bus-query-operation';\nimport { Actor, IAction, IActorArgs, IActorOutput, IActorTest } from '@comunica/core';\n\n/**\n * A comunica actor for rdf-join-quads events.\n * \n * Actor types:\n * * Input:  IActionRdfJoinQuads:      A list of Quadstreams to Join\n * * Test:   <none>\n * * Output: IActorRdfJoinQuadsOutput: The resultant stream of joined quads\n *\n * @see IActionRdfJoinQuads\n * @see IActorRdfJoinQuadsOutput\n */\nexport abstract class ActorRdfJoinQuads extends Actor<IActionRdfJoinQuads, IActorTest, IActorRdfJoinQuadsOutput> {\n  public constructor(args: IActorArgs<IActionRdfJoinQuads, IActorTest, IActorRdfJoinQuadsOutput>) {\n    super(args);\n  }\n\n  /**\n   * Test function for join quads actors.\n   */\n  public abstract test(action: IActionRdfJoinQuads): Promise<IActorTest>;\n\n  /**\n   * Run function for join quads actors.\n   */\n  public abstract run(action: IActionRdfJoinQuads): Promise<IActorRdfJoinQuadsOutput>;\n}\n\nexport interface IActionRdfJoinQuads extends IAction {\n  /**\n   * A list of quad streams to be joined\n   */\n  quadStreams: (QuadStream | undefined)[]\n}\n\nexport interface IActorRdfJoinQuadsOutput extends IActorOutput {\n  /**\n   * The resultant stream of joined Quads\n   */\n  quads?: QuadStream;\n}\n"]}