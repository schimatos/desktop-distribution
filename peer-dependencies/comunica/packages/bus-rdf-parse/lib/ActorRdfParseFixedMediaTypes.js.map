{"version":3,"file":"ActorRdfParseFixedMediaTypes.js","sourceRoot":"","sources":["ActorRdfParseFixedMediaTypes.ts"],"names":[],"mappings":";;;AACA,mFAAmF;AAInF;;;;;;;;;GASG;AACH,MAAsB,4BAA6B,SAAQ,wDACT;IAChD,YAAmB,IAAuC;QACxD,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAAC,MAAuB;QACpD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AATD,oEASC","sourcesContent":["import type { IActorArgsMediaTypedFixed } from '@comunica/actor-abstract-mediatyped';\nimport { ActorAbstractMediaTypedFixed } from '@comunica/actor-abstract-mediatyped';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionRdfParse, IActorRdfParseOutput } from './ActorRdfParse';\n\n/**\n * A base actor for listening to RDF parse events that has fixed media types.\n *\n * Actor types:\n * * Input:  IActionRdfParseOrMediaType:      A parse input or a media type input.\n * * Test:   <none>\n * * Output: IActorOutputRdfParseOrMediaType: The parsed quads.\n *\n * @see IActionInit\n */\nexport abstract class ActorRdfParseFixedMediaTypes extends ActorAbstractMediaTypedFixed<\nIActionRdfParse, IActorTest, IActorRdfParseOutput> implements IActorRdfParseFixedMediaTypesArgs {\n  public constructor(args: IActorRdfParseFixedMediaTypesArgs) {\n    super(args);\n  }\n\n  public async testHandleChecked(action: IActionRdfParse): Promise<boolean> {\n    return true;\n  }\n}\n\nexport interface IActorRdfParseFixedMediaTypesArgs\n  extends IActorArgsMediaTypedFixed<IActionRdfParse, IActorTest, IActorRdfParseOutput> {}\n"]}