{"version":3,"file":"ActorRdfSerializeFixedMediaTypes.js","sourceRoot":"","sources":["ActorRdfSerializeFixedMediaTypes.ts"],"names":[],"mappings":";;;AACA,mFAAmF;AAMnF;;;;;;;;;GASG;AACH,MAAsB,gCAAiC,SAAQ,wDACL;IACxD,YAAmB,IAA2C;QAC5D,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAAC,MAA2B;QACxD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AATD,4EASC","sourcesContent":["import type { IActorArgsMediaTypedFixed } from '@comunica/actor-abstract-mediatyped';\nimport { ActorAbstractMediaTypedFixed } from '@comunica/actor-abstract-mediatyped';\nimport type { IActorTest } from '@comunica/core';\nimport type {\n  IActionRdfSerialize, IActorRdfSerializeOutput,\n} from './ActorRdfSerialize';\n\n/**\n * A base actor for listening to RDF serialize events that has fixed media types.\n *\n * Actor types:\n * * Input:  IActionRdfSerializeOrMediaType:      A serialize input or a media type input.\n * * Test:   <none>\n * * Output: IActorRdfSerializeOutputOrMediaType: The serialized quads.\n *\n * @see IActionInit\n */\nexport abstract class ActorRdfSerializeFixedMediaTypes extends ActorAbstractMediaTypedFixed<\nIActionRdfSerialize, IActorTest, IActorRdfSerializeOutput> implements IActorRdfSerializeFixedMediaTypesArgs {\n  public constructor(args: IActorRdfSerializeFixedMediaTypesArgs) {\n    super(args);\n  }\n\n  public async testHandleChecked(action: IActionRdfSerialize): Promise<boolean> {\n    return true;\n  }\n}\n\nexport interface IActorRdfSerializeFixedMediaTypesArgs\n  extends IActorArgsMediaTypedFixed<IActionRdfSerialize, IActorTest, IActorRdfSerializeOutput> {}\n"]}