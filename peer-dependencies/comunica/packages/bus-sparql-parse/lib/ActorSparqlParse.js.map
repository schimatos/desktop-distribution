{"version":3,"file":"ActorSparqlParse.js","sourceRoot":"","sources":["ActorSparqlParse.ts"],"names":[],"mappings":";;;AACA,yCAAuC;AAGvC;;;;;;;;;;GAUG;AACH,MAAsB,gBAAiB,SAAQ,YAA8D;IAC3G,YAAmB,IAAyE;QAC1F,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;CACF;AAJD,4CAIC","sourcesContent":["import type { IAction, IActorArgs, IActorOutput, IActorTest } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica actor for sparql-parse events.\n *\n * Actor types:\n * * Input:  IActionSparqlParse:      A SPARQL query string.\n * * Test:   <none>\n * * Output: IActorSparqlParseOutput: A parsed query in SPARQL query algebra.\n *\n * @see IActionSparqlParse\n * @see IActorSparqlParseOutput\n */\nexport abstract class ActorSparqlParse extends Actor<IActionSparqlParse, IActorTest, IActorSparqlParseOutput> {\n  public constructor(args: IActorArgs<IActionSparqlParse, IActorTest, IActorSparqlParseOutput>) {\n    super(args);\n  }\n}\n\nexport interface IActionSparqlParse extends IAction {\n  /**\n   * A query.\n   */\n  query: string;\n  /**\n   * The query format.\n   */\n  queryFormat?: string;\n  /**\n   * The query's default base IRI.\n   */\n  baseIRI?: string;\n}\n\nexport interface IActorSparqlParseOutput extends IActorOutput {\n  /**\n   * A parsed query in SPARQL algebra.\n   */\n  operation: Algebra.Operation;\n  /**\n   * An optionally overridden base IRI.\n   */\n  baseIRI?: string;\n}\n"]}