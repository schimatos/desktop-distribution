{"version":3,"file":"ActorSparqlSerialize.js","sourceRoot":"","sources":["ActorSparqlSerialize.ts"],"names":[],"mappings":";;;AAaA,mFAE6C;AAI7C;;;;;;;;;;GAUG;AACH,MAAsB,oBACpB,SAAQ,mDAAwF;IAChG,YAAmB,IAA2F;QAC5G,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;CACF;AALD,oDAKC","sourcesContent":["import type { IActionAbstractMediaTyped,\n  IActionAbstractMediaTypedHandle,\n  IActionAbstractMediaTypedMediaTypeFormats,\n  IActionAbstractMediaTypedMediaTypes,\n  IActorArgsMediaTyped,\n  IActorOutputAbstractMediaTyped,\n  IActorOutputAbstractMediaTypedHandle,\n  IActorOutputAbstractMediaTypedMediaTypeFormats,\n  IActorOutputAbstractMediaTypedMediaTypes,\n  IActorTestAbstractMediaTyped,\n  IActorTestAbstractMediaTypedHandle,\n  IActorTestAbstractMediaTypedMediaTypeFormats,\n  IActorTestAbstractMediaTypedMediaTypes } from '@comunica/actor-abstract-mediatyped';\nimport {\n  ActorAbstractMediaTyped,\n} from '@comunica/actor-abstract-mediatyped';\nimport type { IActorQueryOperationOutputBase } from '@comunica/bus-query-operation';\nimport type { IAction, IActorOutput, IActorTest } from '@comunica/core';\n\n/**\n * A comunica actor for sparql-serialize events.\n *\n * Actor types:\n * * Input:  IActionSparqlSerialize:      SPARQL bindings or a quad stream.\n * * Test:   <none>\n * * Output: IActorSparqlSerializeOutput: A text stream.\n *\n * @see IActionSparqlSerialize\n * @see IActorSparqlSerializeOutput\n */\nexport abstract class ActorSparqlSerialize\n  extends ActorAbstractMediaTyped<IActionSparqlSerialize, IActorTest, IActorSparqlSerializeOutput> {\n  public constructor(args: IActorArgsMediaTyped<IActionSparqlSerialize, IActorTest, IActorSparqlSerializeOutput>) {\n    super(args);\n  }\n}\n\nexport type IActionRootSparqlParse = IActionAbstractMediaTyped<IActionSparqlSerialize>;\nexport type IActorTestRootSparqlParse = IActorTestAbstractMediaTyped<IActorTest>;\nexport type IActorOutputRootSparqlParse = IActorOutputAbstractMediaTyped<IActorSparqlSerializeOutput>;\n\nexport type IActionSparqlSerializeHandle = IActionAbstractMediaTypedHandle<IActionSparqlSerialize>;\nexport type IActorTestSparqlSerializeHandle = IActorTestAbstractMediaTypedHandle<IActorTest>;\nexport type IActorOutputSparqlSerializeHandle = IActorOutputAbstractMediaTypedHandle<IActorSparqlSerializeOutput>;\n\nexport type IActionSparqlSerializeMediaTypes = IActionAbstractMediaTypedMediaTypes;\nexport type IActorTestSparqlSerializeMediaTypes = IActorTestAbstractMediaTypedMediaTypes;\nexport type IActorOutputSparqlSerializeMediaTypes = IActorOutputAbstractMediaTypedMediaTypes;\n\nexport type IActionSparqlSerializeMediaTypeFormats = IActionAbstractMediaTypedMediaTypeFormats;\nexport type IActorTestSparqlSerializeMediaTypeFormats = IActorTestAbstractMediaTypedMediaTypeFormats;\nexport type IActorOutputSparqlSerializeMediaTypeFormats = IActorOutputAbstractMediaTypedMediaTypeFormats;\n\nexport interface IActionSparqlSerialize extends IAction, IActorQueryOperationOutputBase {\n}\n\nexport interface IActorSparqlSerializeOutput extends IActorOutput {\n  /**\n   * A readable string stream in a certain SPARQL serialization that was serialized.\n   */\n  data: NodeJS.ReadableStream;\n}\n"]}