{"version":3,"file":"ActorSparqlSerializeFixedMediaTypes.js","sourceRoot":"","sources":["ActorSparqlSerializeFixedMediaTypes.ts"],"names":[],"mappings":";;;AACA,mFAAmF;AAMnF;;;;;;;;;GASG;AACH,MAAsB,mCAAoC,SAAQ,wDACF;IAC9D,YAAmB,IAA8C;QAC/D,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAAC,MAA8B,EAAE,OAAsB;QACnF,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AATD,kFASC","sourcesContent":["import type { IActorArgsMediaTypedFixed } from '@comunica/actor-abstract-mediatyped';\nimport { ActorAbstractMediaTypedFixed } from '@comunica/actor-abstract-mediatyped';\nimport type { ActionContext, IActorTest } from '@comunica/core';\nimport type {\n  IActionSparqlSerialize, IActorSparqlSerializeOutput,\n} from './ActorSparqlSerialize';\n\n/**\n * A base actor for listening to SPARQL serialize events that has fixed media types.\n *\n * Actor types:\n * * Input:  IActionSparqlSerializeOrMediaType:      A serialize input or a media type input.\n * * Test:   <none>\n * * Output: IActorSparqlSerializeOutputOrMediaType: The serialized quads.\n *\n * @see IActionInit\n */\nexport abstract class ActorSparqlSerializeFixedMediaTypes extends ActorAbstractMediaTypedFixed<\nIActionSparqlSerialize, IActorTest, IActorSparqlSerializeOutput> implements IActorSparqlSerializeFixedMediaTypesArgs {\n  public constructor(args: IActorSparqlSerializeFixedMediaTypesArgs) {\n    super(args);\n  }\n\n  public async testHandleChecked(action: IActionSparqlSerialize, context: ActionContext): Promise<boolean> {\n    return true;\n  }\n}\n\nexport interface IActorSparqlSerializeFixedMediaTypesArgs\n  extends IActorArgsMediaTypedFixed<IActionSparqlSerialize, IActorTest, IActorSparqlSerializeOutput> {}\n"]}