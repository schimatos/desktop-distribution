{"version":3,"file":"LoggerBunyan.js","sourceRoot":"","sources":["LoggerBunyan.ts"],"names":[],"mappings":";;;;;;AAAA,yCAAwC;AACxC,oDAAkC;AAIlC;;GAEG;AACH,MAAa,YAAa,SAAQ,aAAM;IAGtC,YAAmB,IAAuB;QACxC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;QAC7E,IAAI,CAAC,YAAY,GAAG,gBAAY,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC;IAEM,KAAK,CAAC,OAAe,EAAE,IAAU;QACtC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;IAEM,KAAK,CAAC,OAAe,EAAE,IAAU;QACtC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;IAEM,IAAI,CAAC,OAAe,EAAE,IAAU;QACrC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACxC,CAAC;IAEM,IAAI,CAAC,OAAe,EAAE,IAAU;QACrC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACxC,CAAC;IAEM,KAAK,CAAC,OAAe,EAAE,IAAU;QACtC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;IAEM,KAAK,CAAC,OAAe,EAAE,IAAU;QACtC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;CACF;AAhCD,oCAgCC","sourcesContent":["import { Logger } from '@comunica/core';\nimport BunyanLogger from 'bunyan';\nimport type { LogLevelString } from 'bunyan';\nimport type { BunyanStreamProvider } from './stream/BunyanStreamProvider';\n\n/**\n * A bunyan-based logger implementation.\n */\nexport class LoggerBunyan extends Logger {\n  private readonly bunyanLogger: BunyanLogger;\n\n  public constructor(args: ILoggerBunyanArgs) {\n    super();\n    args.streams = args.streamProviders.map(provider => provider.createStream());\n    this.bunyanLogger = BunyanLogger.createLogger(args);\n  }\n\n  public fatal(message: string, data?: any): void {\n    this.bunyanLogger.fatal(data, message);\n  }\n\n  public error(message: string, data?: any): void {\n    this.bunyanLogger.error(data, message);\n  }\n\n  public warn(message: string, data?: any): void {\n    this.bunyanLogger.warn(data, message);\n  }\n\n  public info(message: string, data?: any): void {\n    this.bunyanLogger.info(data, message);\n  }\n\n  public debug(message: string, data?: any): void {\n    this.bunyanLogger.debug(data, message);\n  }\n\n  public trace(message: string, data?: any): void {\n    this.bunyanLogger.trace(data, message);\n  }\n}\n\nexport interface ILoggerBunyanArgs {\n  name: string;\n  streamProviders: BunyanStreamProvider[];\n  level?: LogLevelString;\n  [custom: string]: any;\n}\n"]}